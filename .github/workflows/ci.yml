# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
  pull_request:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9, "3.12"]
        poetry-version: [1.8.3]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: View poetry --help
        run: poetry --help
      - name: Configure poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
      - name: Install dependencies
        run: |
          poetry run pip install --upgrade pip
          poetry install
      - name: Run pytest
        run: poetry run pytest -q tests

  release:
    name: release
    if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'loiccoyle' }}
    needs:
      - tests
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  publish:
    name: Publish to pypi
    needs:
      - release
    if: needs.release.outputs.release_created
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3

      - name: Configure Pypi token
        shell: bash
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish Package
        shell: bash
        run: poetry publish --build

  readme:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
      - name: Insstall poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - run: poetry install
      - run: make readme
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: update readme"
          branch: ${{ github.head_ref }}
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
